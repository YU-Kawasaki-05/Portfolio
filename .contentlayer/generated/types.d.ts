// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  /** ブログ記事タイトル */
  title: string
  /** ブログ記事の概要 */
  description: string
  /** 公開日 */
  publishedAt: IsoDateTimeString
  /** 更新日（任意） */
  updatedAt?: IsoDateTimeString | undefined
  /** ブログカテゴリ */
  category: 'tech' | 'design' | 'career' | 'personal' | 'tutorial'
  /** ブログタグ */
  tags: string[]
  /** 注目記事フラグ */
  featured: boolean
  /** アイキャッチ画像パス */
  image?: string | undefined
  /** 推定読了時間（分） */
  readingTime?: number | undefined
  /** 公開状態 */
  published: boolean
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  dateFormatted: string
  fullDate: string
}

export type Work = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Work'
  /** 実績・プロジェクトタイトル */
  title: string
  /** 簡潔な説明文（表ビュー用） */
  description: string
  /** 年度 */
  year: number
  /** 月 */
  month: number
  /** プロジェクトカテゴリ */
  category: 'web' | 'mobile' | 'design' | 'research' | 'other'
  /** 技術スタック・タグ */
  tags: string[]
  /** プロジェクト状況 */
  status: 'completed' | 'ongoing' | 'archived'
  /** プロジェクトURL（任意） */
  url?: string | undefined
  /** GitHubリポジトリURL（任意） */
  github?: string | undefined
  /** プロジェクト画像パス */
  image?: string | undefined
  /** 注目プロジェクトフラグ */
  featured: boolean
  /** 公開日 */
  publishedAt: IsoDateTimeString
  /** MDX file body */
  body: MDX
  slug: string
  slugAsParams: string
  dateFormatted: string
  fullDate: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | Work
export type DocumentTypeNames = 'Blog' | 'Work'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allWorks: Work[]
  allBlogs: Blog[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  Work: Work
}

export type NestedTypeMap = {

}

 